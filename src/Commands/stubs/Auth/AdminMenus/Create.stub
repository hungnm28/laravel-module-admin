<?php

namespace DumMyNamespace\Http\Livewire\Auth\AdminMenus;

use App\Models\AdminMenu;
use App\Models\Role;
use Hungnm28\LaravelModuleAdmin\Traits\WithAdminTrait;
use Illuminate\Foundation\Auth\Access\AuthorizesRequests;
use Livewire\Component;

class Create extends Component
{

    use WithAdminTrait;
    use AuthorizesRequests;

    public $name = '', $parent_id, $sort, $icon = '', $route = '', $role_ids = [];
    protected $rules = [
        'name' => 'string',
        'route' => 'string|unique:admin_menus,route',
        'role_ids' => 'array',

    ];

    public function store()
    {
        $this->authorize('auth.admin-menus.create');
        $this->validate();
        $data = AdminMenu::create([
            'name' => $this->name,
            'parent_id' => $this->parent_id,
            'sort' => $this->sort,
            'icon' => $this->icon,
            'route' => $this->route,
        ]);
        if ($data) {
            $data->resetRoles($this->role_ids);
            session()->flash('success', 'AdminMenu successfully created.');
            $this->redirectForm("admin.auth.admin-menus", $data->id);
        }
    }

    public function render()
    {
        $roles = Role::get()->pluck("title", "id");
        $parents = AdminMenu::whereParentId(0)->pluck("name", "id");
        $max = AdminMenu::whereParentId(intval($this->parent_id))->count();
        $sorts = [];
        for ($i = 0; $i <= $max + 1; $i++) {
            $sorts[$i] = $i;
        }
        return view('DumMyComponent::livewire.auth.admin-menus.create', compact("roles", "parents", "sorts"))
            ->layout('DumMyComponent::layouts.master', ['title' => 'Auth Admin menus Create']);
    }
}
